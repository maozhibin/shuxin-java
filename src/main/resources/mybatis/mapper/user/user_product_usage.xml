<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baoquan.shuxin.dao.user.UserProductUsageDao">
    <resultMap id="BaseResultMap" type="com.baoquan.shuxin.model.user.UserProductUsage">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="product_id" property="productId" jdbcType="BIGINT"/>
        <result column="time_start" property="timeStart" jdbcType="BIGINT"/>
        <result column="time_end" property="timeEnd" jdbcType="BIGINT"/>
        <result column="time_used" property="timeUsed" jdbcType="BIGINT"/>
        <result column="count_remain" property="countRemain" jdbcType="BIGINT"/>
        <result column="count_used" property="countUsed" jdbcType="BIGINT"/>
        <result column="extra" property="extra" jdbcType="BIGINT"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, product_id, time_start, time_end, time_used, count_remain, count_used, extra
    </sql>
    <insert id="insertIgnore" parameterType="com.baoquan.shuxin.model.user.UserProductUsage">
        INSERT IGNORE INTO user_product_usage (user_id, product_id, time_start, time_end, time_used, count_remain, count_used, extra)
        VALUES (#{userId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT},
                #{timeStart,jdbcType=BIGINT}, #{timeEnd,jdbcType=BIGINT}, #{timeUsed,jdbcType=BIGINT},
                #{countRemain,jdbcType=BIGINT}, #{countUsed,jdbcType=BIGINT},
                #{extra,jdbcType=BIGINT})
    </insert>
    <select id="selectByUserProduct" resultType="com.baoquan.shuxin.model.user.UserProductUsage">
        select
        <include refid="Base_Column_List"/>
        from user_product_usage
        where user_id = #{userId,jdbcType=BIGINT}
        and product_id = #{productId,jdbcType=BIGINT}
    </select>
    <update id="increaseTimeUsed">
        UPDATE user_product_usage
        SET time_used = time_used + 1
        WHERE id = #{id}
    </update>
    <update id="decreaseCountRemain">
        UPDATE user_product_usage
        SET count_used  = count_used + 1,
            count_remain = count_remain - 1
        WHERE id = #{id} AND count_remain > 0
    </update>
    <update id="increaseExtra">
        UPDATE user_product_usage
        SET extra = extra + 1
        WHERE id = #{id}
    </update>
</mapper>