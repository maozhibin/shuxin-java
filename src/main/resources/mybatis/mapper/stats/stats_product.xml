<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baoquan.shuxin.dao.product.StatsProductDao" >
  <resultMap id="BaseResultMap" type="com.baoquan.shuxin.model.stats.StatsProduct" >
    <id column="product_id" property="productId" jdbcType="BIGINT" />
    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="order_num" property="orderNum" jdbcType="BIGINT" />
    <result column="purchase_num" property="purchaseNum" jdbcType="BIGINT" />
    <result column="dateline" property="dateline" jdbcType="BIGINT" />
  </resultMap>
  
  <select id="productTop" resultType="java.util.Map">
	  SELECT
		p.`name`,
		c.`name` className,
		s.total_amount,
		s.order_num,
		s.purchase_num,
		u.username,
		concat(
			FORMAT(
				(
					s.order_num / (
						SELECT
							COUNT(*)
						FROM
							user_product
					)
				) * 100,
				2
			),
			'%'
		) AS rate
	FROM
		product p
	LEFT JOIN product_class c ON p.product_class_id = c.id
	LEFT JOIN stats_product s ON s.product_id = p.id
	LEFT JOIN `user` u ON u.id = p.user_id
	ORDER BY
		s.total_amount DESC
	LIMIT 0,
	 10
  </select>
  
  
  <select id="productList" resultType="java.util.Map">
	  SELECT
		p.`name`,
		c.`name` className,
		s.total_amount,
		s.order_num,
		s.purchase_num,
		u.username,
		concat(
			FORMAT(
				(
					s.order_num / (
						SELECT
							COUNT(*)
						FROM
							user_product
					)
				) * 100,
				2
			),
			'%'
		) AS rate
	FROM
		product p
	LEFT JOIN product_class c ON p.product_class_id = c.id
	LEFT JOIN stats_product s ON s.product_id = p.id
	LEFT JOIN `user` u ON u.id = p.user_id
	where 1=1
	<if test="productName!=null">
		and ( p.`name`=#{productName}
		or u.username=#{productName}
		or c.`name`=#{productName})
	</if>
	ORDER BY
		s.total_amount DESC
	 <if test="page != null">
	              	limit ${page.startIndex},${page.pageSize};
	  </if>
  </select>
  
  <select id="productListCount" resultType="java.lang.Long">
	  SELECT
		COUNT(1)
	  FROM
			product p
		LEFT JOIN product_class c ON p.product_class_id = c.id
		LEFT JOIN stats_product s ON s.product_id = p.id
		LEFT JOIN `user` u ON u.id = p.user_id
		where 1=1
		<if test="productName!=null">
			and ( p.`name`=#{productName}
			or u.username=#{productName}
			or c.`name`=#{productName})
		</if>
  </select>
  
  <select id="queryAllStatsProduct" resultMap="BaseResultMap">
  	SELECT
		*
	FROM
		stats_product
  </select>
  <select id="queryProductId" resultMap="BaseResultMap">
   		SELECT
			*
		FROM
			stats_product
		where product_id=#{productId}
   </select>
   <insert id="insertStatsProductList" useGeneratedKeys="true" parameterType="java.util.List">  
	    <selectKey resultType="long" keyProperty="id" order="AFTER">  
	        SELECT  
	        LAST_INSERT_ID()  
	    </selectKey>  
	    insert into stats_product (product_id,total_amount,order_num,purchase_num,`dateline`)   
	    values  
	    <foreach collection="list" item="item" index="index" separator="," >  
	        (#{item.productId},#{item.totalAmount},#{item.orderNum},#{item.purchaseNum},#{item.dateline})  
	    </foreach>  
   </insert>
   
   
   <update id="updateStatsProductList">
    <foreach collection="list" item="item" index="index" separator=";">
       update stats_product
        <set >
            total_amount = #{item.totalAmount,jdbcType=DECIMAL},
       		order_num = #{item.orderNum,jdbcType=BIGINT},
       		purchase_num = #{item.purchaseNum,jdbcType=BIGINT},
       		dateline = #{item.dateline,jdbcType=BIGINT},
        </set>
        where product_id = #{item.productId,jdbcType=BIGINT}
    </foreach>       
   </update>
</mapper>